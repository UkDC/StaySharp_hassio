# Generated by Django 4.1 on 2022-09-02 05:16

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("stay_sharp", "0013_alter_all_knifes_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="Grinding_data",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "KJ",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(200),
                        ]
                    ),
                ),
                (
                    "GA",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(40),
                        ]
                    ),
                ),
                (
                    "RW",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(130),
                        ]
                    ),
                ),
                ("C1", models.FloatField(default=50.0)),
                ("C2", models.FloatField(default=28.6)),
                ("USH", models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name="Honing_data",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "KJ",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(200),
                        ]
                    ),
                ),
                (
                    "GA",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(40),
                        ]
                    ),
                ),
                (
                    "honing_add",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(40),
                        ]
                    ),
                ),
                (
                    "RW",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(130),
                        ]
                    ),
                ),
                (
                    "FVB_S",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(130),
                        ]
                    ),
                ),
                ("C3_C4", models.FloatField(default=128.1)),
                ("C5_C6", models.FloatField(default=51.4)),
                ("FVB_H", models.FloatField()),
            ],
        ),
    ]
